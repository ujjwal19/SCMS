/* Vendors Prefix - General
   ========================================================================== */
@import "vendor-prefix";

/* Vendors Prefix - Gradient
   ========================================================================== */

// @include gradient(gradient--concat($gradient--concat));
@mixin gradient($gradient-degrees, $gradient--concat) {
    $ie_variables: gradient--ie($gradient--concat);
    $start-color: map-get($ie_variables, 'start');
    $finish-color: map-get($ie_variables, 'finish');

  background-color: mix($start-color, $finish-color); /* Fallback */
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($start-color), to($finish-color));
  background-image: -webkit-linear-gradient($gradient-degrees, gradient--concat($gradient--concat)); 
  background-image:    -moz-linear-gradient($gradient-degrees, gradient--concat($gradient--concat));
  background-image:     -ms-linear-gradient($gradient-degrees, gradient--concat($gradient--concat));
  background-image:      -o-linear-gradient($gradient-degrees, gradient--concat($gradient--concat));
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start-color}', EndColorStr='#{$finish-color}')";
}


/* Responsive styles are passed through mixins
   ========================================================================== */
@mixin respond-to($media) {

    /* ------------extraSmall----------- */
    @if $media==extraSmall {
        @media only screen and (min-width: 0){
            @content;
        }
    }
    @if $media==maxSmall {
        @media only screen and (max-width: 575px){
            @content;
        }
    }
    @if $media==small {
        @media only screen and (min-width: 576px){
            @content;
        }
    }
    @if $media==medium {
        @media only screen and (min-width: 768px){
            @content;
        }
    }
    @if $media==maxMedium {
        @media only screen and (max-width: 767px){
            @content;
        }
    }
    @if $media==large {
        @media only screen and (min-width: 992px){
            @content;
        }
    }
    @if $media==extraLarge {
        @media only screen and (min-width: 992px){
            @content;
        }
    }
    @if $media==extraXLarge {
        @media only screen and (min-width: 1200px){
            @content;
        }
    }
    @if $media==extraXLarge {
        @media only screen and (min-width: 1400px){
            @content;
        }
    }
}


/* Create the mixin for theme colors
   ========================================================================== */

@mixin theme($name, $color) {
    // Define colors in your theme
    $primary: $color;
    $secondary: lighten(adjust-hue($color, 20), 10%);

    // Add your classes with css colors added
    .#{$name} {
        .element {
            color: $primary;
        }

        .other-element {
            background: $secondary;
        }
    }
}


/* Using images for retina display
   ========================================================================== */

@mixin image-2x($image, $width, $height) {

    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        background-image: url($image);
        background-size: $width $height;
    }
}


/* Defining background gradient
   ========================================================================== */

@mixin background-gradient($start-color, $end-color, $orientation) {
    background: $start-color;

    @if $orientation=='vertical' {
        background: -webkit-linear-gradient(top, $start-color, $end-color);
        background: linear-gradient(to bottom, $start-color, $end-color);
    }

    @else if $orientation=='horizontal' {
        background: -webkit-linear-gradient(left, $start-color, $end-color);
        background: linear-gradient(to right, $start-color, $end-color);
    }

    @else {
        background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
        background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}


/* Including font
   ========================================================================== */

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
    @font-face {
        font-family: quote($font-name);
        src: url($file-name + '.eot');
        src: url($file-name + '.eot?#iefix') format('embedded-opentype'),
        url($file-name + '.woff') format('woff'),
        url($file-name + '.ttf') format('truetype'),
        url($file-name + '.svg##{$font-name}') format('svg');
        font-weight: $weight;
        font-style: $style;
    }
}


/* Padding mixin
   ========================================================================== */

@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

/* Margin mixin
   ========================================================================== */

@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

/* Define vertical, horizontal, or both position
   ========================================================================== */

@mixin center($position) {
  position: absolute;
  
  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

/* keyframes mixin
   ========================================================================== */

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}
